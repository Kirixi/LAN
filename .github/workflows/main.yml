name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to GHCR
        run: |
          docker login --username Kirixi --password ${{ secrets.GHRC_TOKEN }} ghcr.io

      - name: Build backend image
        run: |
          docker build . --tag ghcr.io/kirixi/lanserver-stable:latest
        working-directory: ./Backend
      - name: Build frontend image
        run: |
          docker build . --tag ghcr.io/kirixi/lanfrontend-stable:latest
        working-directory: ./Frontend
      - name: Push the images into GHCR
        run: |
          docker push ghcr.io/kirixi/lanfrontend-stable:latest
          docker push ghcr.io/kirixi/lanserver-stable:latest

  deploy-ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Transfer Docker Compose file
        uses: appleboy/scp-action@master
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: ${{ secrets.EC2_SSH_PORT }}
          source: docker-compose.yaml
          target: "/home/ec2-user/docker-compose/"

      - name: SSH into EC2 and deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: | 
            cd home/ec2-user/docker-compose/
            docker login --username Kirixi --password ${{ secrets.GHRC_TOKEN }} ghcr.io 
            docker pull ghcr.io/kirixi/lanfrontend-stable:latest
            docker pull ghcr.io/kirixi/lanserver-stable:latest
            docker compose up

      



  # quality-check:
  #   name: Official SonarQube Scan v2
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Sonar Qube Scanning
  #       uses: kitabisa/sonarqube-action@v1.2.0
  #       with:
  #         host: ${{ secrets.SONARQUBE_HOST }}
  #         login: ${{ secrets.SONARQUBE_TOKEN }}
  #         projectKey: "LAN-project"
